import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useCallback, useEffect } from "react";
// Wagmi Imports
import { useAccount, usePublicClient, useSignMessage } from "wagmi";

// W3I Imports
import {
  usePrepareRegistration,
  useRegister,
  useSubscribe,
  useSubscription,
  useUnregister,
  useUnsubscribe,
  useWeb3InboxAccount,
  useWeb3InboxClient,
} from "@web3inbox/react";

export default function Home() {
  // Wagmi
  const { address } = useAccount();
  const { signMessageAsync } = useSignMessage();

  // W3I
  const { data: w3iClient, isLoading: w3iClientIsLoading } =
    useWeb3InboxClient();
  const { isRegistered, setAccount } = useWeb3InboxAccount(address);

  // console.log("address", address);
  // console.log("w3icli", w3iClient);

  useEffect(() => {
    if (!address || !w3iClient) return;
    setAccount(`eip155:1:${address}`);
  }, [w3iClient, address]);

  if (isRegistered) {
    console.log("isRegistered", isRegistered);
  }

  // Registration
  const { prepareRegistration } = usePrepareRegistration();
  const { register, isLoading: isRegistering } = useRegister();

  const handleRegistration = async () => {
    try {
      const { message, registerParams } = await prepareRegistration();
      const signature = await signMessageAsync({ message: message });
      await register({ registerParams, signature });
    } catch (registerIdentityError: any) {
      console.error(registerIdentityError);
    }
  };

  // Subscription
  const { subscribe, isLoading: isSubscribing } = useSubscribe();
  const { unsubscribe, isLoading: isUnsubscribing } = useUnsubscribe();
  const { data: subscription } = useSubscription();
  const subscriptions = useSubscription();
  const isSubscribed = Boolean(subscription);

  return (
    <>
      <Head>
        <title>WalletConnect | Next Starter Template</title>
        <meta name="description" content="Generated by create-wc-dapp" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <w3m-button />
        <div>
          <h1> W3I Stable Test</h1>
          <div
            style={{
              display: "flex",
              flexDirection: "column",
            }}
          >
            <button className={styles.blueButton} onClick={handleRegistration}>
              {isRegistered ? "Registered" : "Register"}
            </button>
            <button className={styles.blueButton} onClick={subscribe}>
              {isSubscribed ? "Subscribed" : "Subscribe"}
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
